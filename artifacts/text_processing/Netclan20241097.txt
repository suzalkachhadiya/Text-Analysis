itle netclan
source url httpsinsightsblackcoffercomanagentbasedmodelofavirtualpowerplantvpp


home
our success stories
an agentbased model of a virtual power plant vpp
client background
client
a leading energy firm in the usa
industry type
energy
services
power energy distribution
organization size

project objective
to create an agent based model of a virtual power plant in netlogo to see the function of multiple such power plants that worked simultaneously these power plants created and supplied energy based on a demand parameter that can be controlled by the observer
project description
the client defined specific requirements as to how he wanted the model to be
the requirements were divided into  parts each successive part increased in complexity and required the model to be adjusted or configured to fit that part into it
the entire model when completed contained all the four parts defined by the client in the statement of work
our solution
created the model according to requirements
the clustering of multiple agents and their position is decided mathematically based on the total number of agents and the sum of their energies the agents form a cluster based on the condition that the sum of their power is a figure that is above a certain threshold amount the threshold amount is also decided by the observer
project deliverables
httpsgithubcomajaybidyarthyshingisamudzibuildnetlogoabmforsimulatingvirtualpowergrideconomics
above is the github link to every state of the model that was delivered to the client
the uploads start from a basic model with only clustering of the agents
the final upload is a model that contains the full representation of a vpp for simulation
tools used
netlogo
 python
languagetechniques used
netlogo uses a specific language that resembles the logo language but has its unique syntax and variations in the way variables are stored and how a list is parsed
models used
clustering
skills used
netlogo programming
what are the technical challenges faced during project execution
the major challenge was controlling the behavior of each agent in the model the lack of understanding of the language and the available resources about it made it challenging to figure out the actual behavior of the agents and the overall model
the decision to decide where exactly each agent will cluster on the grid was difficult primarily because each agent spawned on a random patch of the screen this meant that each agent would have to be given a spot to land on and form a cluster with other agents
the next challenge was deciding the condition on which the agents will cluster as their relative distance to each other couldnt be used as a parameter as it wasnt relevant to the models purpose
how the technical challenges were solved
the technical challenges were solved by extensive research and referring to several forums over the span of  months
project snapshots
project video
httpswwwyoutubecomwatchvfzcuzzqqabchannelblackcoffer
related articles
more from author
integrating machine learning code into kubeflow pipeline  kuberflow mlops kubernetes
facial recognition attendance system
face recognition using deepface
most popular insights
due to the covid the repercussion of the environment
june  
data transformation
july  
rising it cities and its impact on the economy environment infrastructure
august  
ecommerce store analysis  purchase behavior ad spend conversion traffic etc
july  
load more
recommended insights
dowjonesindustrialaverage time series data analysis analysis and results of data
return on advertising spend dashboard marketing automation and analytics using etl
auvik connectwise integration in grafana
embedding care robots into society and practice sociotechnical considerations